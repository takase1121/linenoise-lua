name: CI
on: [push, workflow_dispatch]

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - uses: docker://ghcr.io/lite-xl/lite-xl-build-box:v2.1.1
        with:
          args: -c "make && mv linenoise_lua.so linenoise_lua-x86_64-linux.so"

      - uses: actions/upload-artifact@v4
        with:
          name: Linux artifacts
          path: linenoise_lua-x86_64-linux.so
  
  ci-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        config:
          - {target: 'x86_64-apple-darwin', name: 'x86_64-darwin'}
          - {target: 'aarch64-apple-darwin', name: 'aarch64-darwin'}

    env:
      CFLAGS: -target ${{ matrix.config.target }}
      LDFLAGS: -target ${{ matrix.config.target }}

    steps:
      
      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - run: |
          make
          mv linenoise_lua.so linenoise_lua-${{ matrix.config.name }}.so

      - uses: actions/upload-artifact@v4
        with:
          name: macOS artifacts (${{ matrix.config.name }})
          path: linenoise_lua-${{ matrix.config.name }}.so

  ci-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - {msystem: MINGW32, prefix: 'i686', name: 'x86-windows'}
          - {msystem: MINGW64, prefix: 'x86_64', name: 'x86_64-windows'}

    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.config.msystem }}
          install: >-
            make
            mingw-w64-${{ matrix.config.prefix }}-gcc
      
      - run: |
          make
          mv linenoise_lua.dll linenoise_lua-${{ matrix.config.name }}.dll

      - uses: actions/upload-artifact@v4
        with:
          name: Windows artifacts (${{ matrix.config.name }})
          path: linenoise_lua-${{ matrix.config.name }}.dll

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["ci-linux", "ci-windows", "ci-macos"]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*.so,*.dll"